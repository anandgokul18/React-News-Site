{"ast":null,"code":"var _jsxFileName = \"/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Form, Grid, Header, Segment, Container, List } from 'semantic-ui-react';\n\nclass SearchApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearchChange = async (event, {\n      value\n    }) => {\n      try {\n        const response = await fetch(`https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`, {\n          headers: {\n            \"Ocp-Apim-Subscription-Key\": \"d901d64eeb334505825c20a547b760ba\"\n          }\n        });\n        const data = await response.json();\n        const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n        const results = resultsRaw.map(result => ({\n          title: result.displayText,\n          url: result.url\n        }));\n        this.setState({\n          results\n        });\n      } catch (error) {\n        console.error(`Error fetching search ${value}`);\n      }\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => {\n      this.setState({\n        selectedResult: result\n      });\n      this.state.selectedResult = result;\n      e.preventDefault();\n      localStorage.setItem('searchQuery', result.title); //console.log(result.title);\n\n      this.props.searchQueryProp(result.title);\n    };\n\n    this.state = {\n      results: ['null'],\n      selectedResult: null,\n      previousQuery: null\n    }; //console.log(localStorage.getItem('isThisSearchPage'));\n    //Retrieving the previous search query state from Storage\n\n    var retrievedPrevQueryObject = localStorage.getItem('searchQuery');\n\n    if (retrievedPrevQueryObject == null) {\n      //console.log('Detected null');\n      this.state.previousQuery = 'Enter keyword...';\n    } else {\n      //console.log('Detected ' + (retrievedSwitch1stateObject === 'true'));\n      this.state.previousQuery = retrievedPrevQueryObject;\n    } //if (this.props.resetSearchProp === true) {\n    //   this.state.name = null;\n    //}\n\n  }\n\n  render() {\n    const {\n      value,\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Search, Object.assign({\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 1000, {\n        leading: true\n      }),\n      results: this.state.results\n    }, this.props, {\n      style: {\n        overflow: 'visible'\n      },\n      defaultValue: this.state.previousQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\nexport default SearchApp;","map":{"version":3,"sources":["/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js"],"names":["_","React","Component","Search","Form","Grid","Header","Segment","Container","List","SearchApp","constructor","props","handleSearchChange","event","value","response","fetch","headers","data","json","resultsRaw","suggestionGroups","searchSuggestions","results","map","result","title","displayText","url","setState","error","console","handleResultSelect","e","selectedResult","state","preventDefault","localStorage","setItem","searchQueryProp","previousQuery","retrievedPrevQueryObject","getItem","render","debounce","leading","overflow","styleLink","document","createElement","rel","href","head","appendChild"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Search, Form, Grid, Header, Segment, Container, List } from 'semantic-ui-react'\n\n\nclass SearchApp extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { results: ['null'], selectedResult: null, previousQuery: null };\n\n      //console.log(localStorage.getItem('isThisSearchPage'));\n\n\n      //Retrieving the previous search query state from Storage\n      var retrievedPrevQueryObject = localStorage.getItem('searchQuery');\n      if (retrievedPrevQueryObject == null) {\n         //console.log('Detected null');\n         this.state.previousQuery = 'Enter keyword...';\n      } else {\n         //console.log('Detected ' + (retrievedSwitch1stateObject === 'true'));\n         this.state.previousQuery = retrievedPrevQueryObject;\n\n      }\n\n\n      //if (this.props.resetSearchProp === true) {\n      //   this.state.name = null;\n      //}\n   }\n\n\n   handleSearchChange = async (event, { value }) => {\n      try {\n         const response = await fetch(\n            `https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`,\n            {\n               headers: {\n                  \"Ocp-Apim-Subscription-Key\": \"d901d64eeb334505825c20a547b760ba\"\n               }\n            }\n         );\n         const data = await response.json();\n         const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n         const results = resultsRaw.map(result => ({ title: result.displayText, url: result.url }));\n         this.setState({ results });\n      } catch (error) {\n         console.error(`Error fetching search ${value}`);\n      }\n   };\n\n   handleResultSelect = (e, { result }) => {\n      this.setState({ selectedResult: result });\n      this.state.selectedResult = result;\n      e.preventDefault();\n      localStorage.setItem('searchQuery', result.title);\n      //console.log(result.title);\n      this.props.searchQueryProp(result.title);\n   }\n\n   render() {\n      const { value, results } = this.state\n\n      return (\n         <Form>\n            <Search\n               onResultSelect={this.handleResultSelect}\n               onSearchChange={_.debounce(this.handleSearchChange, 1000, {\n                  leading: true,\n               })}\n               results={this.state.results}\n               {...this.props}\n               style={{ overflow: 'visible' }}\n               defaultValue={this.state.previousQuery}\n            />\n         </Form>\n      )\n   }\n}\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nexport default SearchApp;"]},"metadata":{},"sourceType":"module"}