{"ast":null,"code":"var _jsxFileName = \"/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Form, Grid, Header, Segment, Container, List } from 'semantic-ui-react';\nvar currentValueInsideField = '';\n\nclass SearchApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        console.log(currentValueInsideField);\n        localStorage.setItem('searchQuery', currentValueInsideField); //this.state.previousQuery = currentValueInsideField;\n\n        this.props.searchQueryProp(currentValueInsideField);\n      }\n    };\n\n    this.handleSearchChange = async (event, {\n      value\n    }) => {\n      //To handle enter key press\n      currentValueInsideField = value;\n\n      try {\n        const response = await fetch(`https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`, {\n          headers: {\n            \"Ocp-Apim-Subscription-Key\": \"aaad901d64eeb334505825c20a547b760ba\"\n          }\n        });\n        const data = await response.json();\n        const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n        const results = resultsRaw.map(result => ({\n          title: result.displayText,\n          url: result.url\n        }));\n        this.setState({\n          results\n        });\n      } catch (error) {\n        console.error(`Error fetching search ${value}`);\n      }\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => {\n      this.setState({\n        selectedResult: result\n      });\n      this.state.selectedResult = result;\n      e.preventDefault();\n      localStorage.setItem('searchQuery', result.title); //console.log(result.title);\n      //this.state.previousQuery = result.title;\n\n      this.props.searchQueryProp(result.title);\n    };\n\n    this.state = {\n      results: ['null'],\n      selectedResult: null,\n      previousQuery: null\n    }; //console.log(localStorage.getItem('isThisSearchPage'));\n    //Retrieving the previous search query state from Storage\n\n    console.log(window.location.href);\n    var entireurl = window.location.href;\n    var array = entireurl.split('?');\n\n    if (array[0] === 'http://localhost:3000/search') {\n      var retrievedPrevQueryObject = localStorage.getItem('searchQuery');\n\n      if (retrievedPrevQueryObject == null) {\n        //console.log('Detected null');\n        this.state.previousQuery = null;\n      } else {\n        //console.log('Detected ' + (retrievedSwitch1stateObject === 'true'));\n        this.state.previousQuery = retrievedPrevQueryObject;\n      }\n    } else {\n      this.state.previousQuery = null;\n    }\n  }\n\n  render() {\n    const {\n      value,\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onKeyPress: this.handleKeyPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Search, Object.assign({\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 1000, {\n        leading: true\n      }),\n      results: this.state.results\n    }, this.props, {\n      style: {\n        overflow: 'visible'\n      },\n      icon: 'chevron down',\n      placeholder: \"Enter keyword...\",\n      defaultValue: this.state.previousQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    })), \" \");\n  }\n\n}\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\nexport default SearchApp;","map":{"version":3,"sources":["/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js"],"names":["_","React","Component","Search","Form","Grid","Header","Segment","Container","List","currentValueInsideField","SearchApp","constructor","props","handleKeyPress","event","key","console","log","localStorage","setItem","searchQueryProp","handleSearchChange","value","response","fetch","headers","data","json","resultsRaw","suggestionGroups","searchSuggestions","results","map","result","title","displayText","url","setState","error","handleResultSelect","e","selectedResult","state","preventDefault","previousQuery","window","location","href","entireurl","array","split","retrievedPrevQueryObject","getItem","render","debounce","leading","overflow","styleLink","document","createElement","rel","head","appendChild"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Search, Form, Grid, Header, Segment, Container, List } from 'semantic-ui-react'\n\nvar currentValueInsideField = '';\n\nclass SearchApp extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { results: ['null'], selectedResult: null, previousQuery: null };\n\n      //console.log(localStorage.getItem('isThisSearchPage'));\n\n\n      //Retrieving the previous search query state from Storage\n      console.log(window.location.href);\n      var entireurl = window.location.href;\n      var array = entireurl.split('?');\n      if (array[0] === 'http://localhost:3000/search') {\n         var retrievedPrevQueryObject = localStorage.getItem('searchQuery');\n         if (retrievedPrevQueryObject == null) {\n            //console.log('Detected null');\n            this.state.previousQuery = null;\n         } else {\n            //console.log('Detected ' + (retrievedSwitch1stateObject === 'true'));\n            this.state.previousQuery = retrievedPrevQueryObject;\n\n         }\n      } else {\n         this.state.previousQuery = null;\n      }\n\n   }\n\n   handleKeyPress = (event) => {\n      if (event.key === 'Enter') {\n         console.log(currentValueInsideField);\n         localStorage.setItem('searchQuery', currentValueInsideField);\n         //this.state.previousQuery = currentValueInsideField;\n         this.props.searchQueryProp(currentValueInsideField);\n      }\n   }\n\n\n   handleSearchChange = async (event, { value }) => {\n\n      //To handle enter key press\n      currentValueInsideField = value;\n\n      try {\n         const response = await fetch(\n            `https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`,\n            {\n               headers: {\n                  \"Ocp-Apim-Subscription-Key\": \"aaad901d64eeb334505825c20a547b760ba\"\n               }\n            }\n         );\n         const data = await response.json();\n         const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n         const results = resultsRaw.map(result => ({ title: result.displayText, url: result.url }));\n         this.setState({ results });\n\n\n      } catch (error) {\n\n         console.error(`Error fetching search ${value}`);\n      }\n   };\n\n   handleResultSelect = (e, { result }) => {\n      this.setState({ selectedResult: result });\n      this.state.selectedResult = result;\n      e.preventDefault();\n      localStorage.setItem('searchQuery', result.title);\n      //console.log(result.title);\n      //this.state.previousQuery = result.title;\n      this.props.searchQueryProp(result.title);\n   }\n\n   render() {\n      const { value, results } = this.state\n\n      return (\n         <Form onKeyPress={this.handleKeyPress}>\n            <Search\n               onResultSelect={this.handleResultSelect}\n               onSearchChange={_.debounce(this.handleSearchChange, 1000, {\n                  leading: true,\n               })}\n               results={this.state.results}\n               {...this.props}\n               style={{ overflow: 'visible' }}\n               icon={'chevron down'}\n               placeholder=\"Enter keyword...\"\n               defaultValue={this.state.previousQuery}\n            /> {/*Add this for persisting search query  defaultValue={this.state.previousQuery} */}\n         </Form>\n      )\n   }\n}\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nexport default SearchApp;"]},"metadata":{},"sourceType":"module"}