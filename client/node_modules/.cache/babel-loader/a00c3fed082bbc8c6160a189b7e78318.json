{"ast":null,"code":"var _jsxFileName = \"/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Form, Grid, Header, Segment, Container, List } from 'semantic-ui-react';\nexport default class SearchApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: ['null'],\n      selectedResult: null\n    };\n\n    this.handleSearchChange = async (event, {\n      value\n    }) => {\n      try {\n        const response = await fetch(`https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`, {\n          headers: {\n            \"Ocp-Apim-Subscription-Key\": \"d901d64eeb334505825c20a547b760ba\"\n          }\n        });\n        const data = await response.json();\n        const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n        const results = resultsRaw.map(result => ({\n          title: result.displayText,\n          url: result.url\n        }));\n        this.setState({\n          results\n        });\n      } catch (error) {\n        console.error(`Error fetching search ${value}`);\n      }\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => {\n      this.setState({\n        selectedResult: result\n      });\n    };\n\n    this.onSubmit = (e, {\n      result\n    }) => {\n      e.preventDefault();\n      {\n        /* -----------you would send data to API to get results, I used database for ease, this also clears the form on submit----------------*/\n      }\n      localStorage.setItem('searchQuery', result);\n      this.props.searchQueryProp(result);\n    };\n  }\n\n  render() {\n    const {\n      value,\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Search, Object.assign({\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 1000, {\n        leading: true\n      }),\n      results: this.state.results\n    }, this.props, {\n      style: {\n        overflow: 'visible'\n      },\n      defaultValue: \"Enter keyword...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.onSubmit(e),\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \".\"));\n  }\n\n}\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);","map":{"version":3,"sources":["/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js"],"names":["_","React","Component","Search","Form","Grid","Header","Segment","Container","List","SearchApp","state","results","selectedResult","handleSearchChange","event","value","response","fetch","headers","data","json","resultsRaw","suggestionGroups","searchSuggestions","map","result","title","displayText","url","setState","error","console","handleResultSelect","e","onSubmit","preventDefault","localStorage","setItem","props","searchQueryProp","render","debounce","leading","overflow","display","styleLink","document","createElement","rel","href","head","appendChild"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Search, Form, Grid, Header, Segment, Container, List } from 'semantic-ui-react'\n\n\nexport default class SearchApp extends Component {\n   state = { results: ['null'], selectedResult: null };\n\n   handleSearchChange = async (event, { value }) => {\n      try {\n         const response = await fetch(\n            `https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`,\n            {\n               headers: {\n                  \"Ocp-Apim-Subscription-Key\": \"d901d64eeb334505825c20a547b760ba\"\n               }\n            }\n         );\n         const data = await response.json();\n         const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n         const results = resultsRaw.map(result => ({ title: result.displayText, url: result.url }));\n         this.setState({ results });\n      } catch (error) {\n         console.error(`Error fetching search ${value}`);\n      }\n   };\n\n   handleResultSelect = (e, { result }) =>{\n      this.setState({ selectedResult: result });\n   }\n\n   onSubmit = (e, { result }) => {\n      e.preventDefault();\n      {/* -----------you would send data to API to get results, I used database for ease, this also clears the form on submit----------------*/ }\n      localStorage.setItem('searchQuery', result);\n      this.props.searchQueryProp(result);\n\n   }\n\n   render() {\n      const { value, results } = this.state\n\n      return (\n         <Form>\n            <Search\n               onResultSelect={this.handleResultSelect}\n               onSearchChange={_.debounce(this.handleSearchChange, 1000, {\n                  leading: true,\n               })}\n               results={this.state.results}\n               {...this.props}\n               style={{ overflow: 'visible' }}\n               defaultValue='Enter keyword...'\n            />\n            <button onClick={(e) => this.onSubmit(e)} style={{ display: 'none' }}>.</button>\n         </Form>\n      )\n   }\n}\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);"]},"metadata":{},"sourceType":"module"}