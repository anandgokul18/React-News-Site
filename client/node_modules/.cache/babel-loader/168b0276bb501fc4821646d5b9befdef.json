{"ast":null,"code":"var _jsxFileName = \"/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/Search.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Navbar, Nav, NavLink, NavDropdown, Form, FormControl } from 'react-bootstrap';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport Suggestions from './Suggestions';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const form = {\n        name: this.state.name\n      };\n      {\n        /* -----------you would send data to API to get results, I used database for ease, this also clears the form on submit----------------*/\n      }\n      localStorage.setItem('searchQuery', this.state.name);\n      let temp = this.state.name;\n      this.setState({\n        name: null\n      });\n      this.state.name = null;\n      this.props.searchQueryProp(temp);\n    };\n\n    this.state = {\n      name: null\n    };\n    console.log(localStorage.getItem('isThisSearchPage')); //Retrieving the previous search query state from Storage\n\n    var retrievedPrevQueryObject = localStorage.getItem('searchQuery');\n\n    if (retrievedPrevQueryObject == null) {\n      //console.log('Detected null');\n      this.state.name = null;\n    } else {\n      //console.log('Detected ' + (retrievedSwitch1stateObject === 'true'));\n      if (this.props.saveQuery === true) {\n        this.state.name = retrievedPrevQueryObject;\n      } else {\n        this.state.name = null;\n      }\n    } //if (this.props.resetSearchProp === true) {\n    //   this.state.name = null;\n    //}\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"input-group input-group-sm mb-3\",\n      style: {\n        paddingRight: '20px',\n        paddingTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      class: \"form-control form-control-sm\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: e => this.handleChange(e),\n      placeholder: \"Enter keyword...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"input-group-text\",\n      id: \"inputGroup-sizing-sm\",\n      style: {\n        borderTopRightRadius: '4px',\n        borderBottomRightRadius: '4px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n      style: {\n        fontSize: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 151\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => this.onSubmit(e),\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, \"SUBMIT\"))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/Search.js"],"names":["React","Component","axios","Button","Navbar","Nav","NavLink","NavDropdown","Form","FormControl","InputGroup","KeyboardArrowDownIcon","Suggestions","Search","constructor","props","handleChange","e","setState","target","name","value","onSubmit","preventDefault","form","state","localStorage","setItem","temp","searchQueryProp","console","log","getItem","retrievedPrevQueryObject","saveQuery","render","paddingRight","paddingTop","borderTopRightRadius","borderBottomRightRadius","fontSize","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport { Button, Navbar, Nav, NavLink, NavDropdown, Form, FormControl } from 'react-bootstrap'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nimport Suggestions from './Suggestions'\n\nclass Search extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         name: null,\n      };\n\n      console.log(localStorage.getItem('isThisSearchPage'));\n\n\n      //Retrieving the previous search query state from Storage\n      var retrievedPrevQueryObject = localStorage.getItem('searchQuery');\n      if (retrievedPrevQueryObject == null) {\n         //console.log('Detected null');\n         this.state.name = null;\n      } else {\n         //console.log('Detected ' + (retrievedSwitch1stateObject === 'true'));\n         if (this.props.saveQuery === true) {\n            this.state.name = retrievedPrevQueryObject;\n         } else {\n            this.state.name = null;\n         }\n      }\n\n\n      //if (this.props.resetSearchProp === true) {\n      //   this.state.name = null;\n      //}\n   }\n\n   handleChange = (e) => {\n      this.setState({\n         [e.target.name]: e.target.value\n      })\n   }\n\n   onSubmit = (e) => {\n      e.preventDefault();\n      const form = {\n         name: this.state.name,\n      }\n      {/* -----------you would send data to API to get results, I used database for ease, this also clears the form on submit----------------*/ }\n      localStorage.setItem('searchQuery', this.state.name);\n      let temp = this.state.name;\n      this.setState({\n         name: null,\n      })\n      this.state.name = null;\n      this.props.searchQueryProp(temp);\n\n   }\n\n   render() {\n      return (\n         <div>\n            <Form>\n               <InputGroup className=\"input-group input-group-sm mb-3\" style={{ paddingRight: '20px', paddingTop: '10px' }}>\n                  <input\n                     class=\"form-control form-control-sm\"\n                     name='name'\n                     value={this.state.name}\n                     onChange={e => this.handleChange(e)}\n                     placeholder=\"Enter keyword...\"\n                  />\n\n                  <div class=\"input-group-append\">\n                     <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\" style={{ borderTopRightRadius: '4px', borderBottomRightRadius: '4px' }}><KeyboardArrowDownIcon style={{ fontSize: '15px' }} /></span>\n                  </div>\n                  <button onClick={(e) => this.onSubmit(e)} style={{ display: 'none' }}>SUBMIT</button>\n               </InputGroup>\n            </Form>\n         </div>\n      );\n   }\n}\n\nexport default Search;\n\n"]},"metadata":{},"sourceType":"module"}