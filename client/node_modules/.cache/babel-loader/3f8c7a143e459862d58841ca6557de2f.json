{"ast":null,"code":"var _jsxFileName = \"/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport faker from 'faker';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react';\n\nconst categoryLayoutRenderer = ({\n  categoryContent,\n  resultsContent\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  className: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }\n}, categoryContent), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    background: 'red'\n  },\n  className: \"results\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }\n}, resultsContent));\n\ncategoryLayoutRenderer.propTypes = {\n  categoryContent: PropTypes.node,\n  resultsContent: PropTypes.node\n};\n\nconst categoryRenderer = ({\n  name\n}) => /*#__PURE__*/React.createElement(Label, {\n  as: \"span\",\n  content: name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 40\n  }\n});\n\ncategoryRenderer.propTypes = {\n  name: PropTypes.string\n};\n\nconst resultRenderer = ({\n  title\n}) => /*#__PURE__*/React.createElement(Label, {\n  content: title,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 39\n  }\n});\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nconst getResults = () => _.times(5, () => ({\n  title: faker.company.companyName(),\n  description: faker.company.catchPhrase(),\n  image: faker.internet.avatar(),\n  price: faker.finance.amount(0, 100, 2, '$')\n}));\n\nconst source = _.range(0, 3).reduce(memo => {\n  const name = faker.hacker.noun(); // eslint-disable-next-line no-param-reassign\n\n  memo[name] = {\n    name,\n    results: getResults()\n  };\n  return memo;\n}, {});\n\nexport default class SearchApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        const filteredResults = _.reduce(source, (memo, data, name) => {\n          const results = _.filter(data.results, isMatch);\n\n          if (results.length) memo[name] = {\n            name,\n            results\n          }; // eslint-disable-line no-param-reassign\n\n          return memo;\n        }, {});\n\n        this.setState({\n          isLoading: false,\n          results: filteredResults\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      value,\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Search, Object.assign({\n      category: true,\n      categoryLayoutRenderer: categoryLayoutRenderer,\n      categoryRenderer: categoryRenderer,\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      resultRenderer: resultRenderer,\n      results: results,\n      value: value\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, JSON.stringify(this.state, null, 2)), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, \"Options\"), /*#__PURE__*/React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, JSON.stringify(source, null, 2)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js"],"names":["PropTypes","_","faker","React","Component","Search","Grid","Header","Segment","Label","categoryLayoutRenderer","categoryContent","resultsContent","background","propTypes","node","categoryRenderer","name","string","resultRenderer","title","description","initialState","isLoading","results","value","getResults","times","company","companyName","catchPhrase","image","internet","avatar","price","finance","amount","source","range","reduce","memo","hacker","noun","SearchApp","state","handleResultSelect","e","result","setState","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filteredResults","data","filter","render","debounce","leading","props","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport faker from 'faker'\nimport React, { Component } from 'react'\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react'\n\nconst categoryLayoutRenderer = ({ categoryContent, resultsContent }) => (\n   <div>\n      <h3 className='name'>{categoryContent}</h3>\n      <div style={{ background: 'red' }} className='results'>\n         {resultsContent}\n      </div>\n   </div>\n)\n\ncategoryLayoutRenderer.propTypes = {\n   categoryContent: PropTypes.node,\n   resultsContent: PropTypes.node,\n}\n\nconst categoryRenderer = ({ name }) => <Label as='span' content={name} />\n\ncategoryRenderer.propTypes = {\n   name: PropTypes.string,\n}\n\nconst resultRenderer = ({ title }) => <Label content={title} />\n\nresultRenderer.propTypes = {\n   title: PropTypes.string,\n   description: PropTypes.string,\n}\n\nconst initialState = { isLoading: false, results: [], value: '' }\n\nconst getResults = () =>\n   _.times(5, () => ({\n      title: faker.company.companyName(),\n      description: faker.company.catchPhrase(),\n      image: faker.internet.avatar(),\n      price: faker.finance.amount(0, 100, 2, '$'),\n   }))\n\nconst source = _.range(0, 3).reduce((memo) => {\n   const name = faker.hacker.noun()\n\n   // eslint-disable-next-line no-param-reassign\n   memo[name] = {\n      name,\n      results: getResults(),\n   }\n\n   return memo\n}, {})\n\nexport default class SearchApp extends Component {\n   state = initialState\n\n   handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n   handleSearchChange = (e, { value }) => {\n      this.setState({ isLoading: true, value })\n\n      setTimeout(() => {\n         if (this.state.value.length < 1) return this.setState(initialState)\n\n         const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n         const isMatch = (result) => re.test(result.title)\n\n         const filteredResults = _.reduce(\n            source,\n            (memo, data, name) => {\n               const results = _.filter(data.results, isMatch)\n               if (results.length) memo[name] = { name, results } // eslint-disable-line no-param-reassign\n\n               return memo\n            },\n            {},\n         )\n\n         this.setState({\n            isLoading: false,\n            results: filteredResults,\n         })\n      }, 300)\n   }\n\n   render() {\n      const { isLoading, value, results } = this.state\n\n      return (\n         <Grid>\n            <Grid.Column width={8}>\n               <Search\n                  category\n                  categoryLayoutRenderer={categoryLayoutRenderer}\n                  categoryRenderer={categoryRenderer}\n                  loading={isLoading}\n                  onResultSelect={this.handleResultSelect}\n                  onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                     leading: true,\n                  })}\n                  resultRenderer={resultRenderer}\n                  results={results}\n                  value={value}\n                  {...this.props}\n               />\n            </Grid.Column>\n            <Grid.Column width={8}>\n               <Segment>\n                  <Header>State</Header>\n                  <pre style={{ overflowX: 'auto' }}>\n                     {JSON.stringify(this.state, null, 2)}\n                  </pre>\n                  <Header>Options</Header>\n                  <pre style={{ overflowX: 'auto' }}>\n                     {JSON.stringify(source, null, 2)}\n                  </pre>\n               </Segment>\n            </Grid.Column>\n         </Grid>\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}