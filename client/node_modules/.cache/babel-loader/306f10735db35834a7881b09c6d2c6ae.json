{"ast":null,"code":"var _jsxFileName = \"/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js\";\nimport React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport _ from \"lodash\";\nimport logo from \"../logo.svg\";\nimport SelectedResult from \"./SelectedResult\";\nimport \"../App.css\";\nimport PropTypes from 'prop-types';\n\nclass SearchApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: ['null'],\n      selectedResult: null\n    };\n\n    this.handleSearchChange = async (event, {\n      value\n    }) => {\n      try {\n        const response = await fetch(`https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`, {\n          headers: {\n            \"Ocp-Apim-Subscription-Key\": \"d901d64eeb334505825c20a547b760ba\"\n          }\n        });\n        const data = await response.json();\n        const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n        const results = resultsRaw.map(result => ({\n          title: result.displayText,\n          url: result.url\n        }));\n        this.setState({\n          results\n        });\n      } catch (error) {\n        console.error(`Error fetching search ${value}`);\n      }\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      selectedResult: result\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      onSearchChange: _.debounce(this.handleSearchChange, 1000, {\n        leading: true\n      }),\n      results: this.state.results,\n      onResultSelect: this.handleResultSelect,\n      categoryLayoutRenderer: categoryLayoutRenderer,\n      resultRenderer: resultRenderer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SelectedResult, {\n      result: this.state.selectedResult,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst categoryLayoutRenderer = ({\n  categoryContent,\n  resultsContent\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(\"h3\", {\n  className: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }\n}, categoryContent), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    background: 'red'\n  },\n  className: \"results\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }\n}, resultsContent));\n\ncategoryLayoutRenderer.propTypes = {\n  categoryContent: PropTypes.node,\n  resultsContent: PropTypes.node\n};\n\nconst categoryRenderer = ({\n  name\n}) => /*#__PURE__*/React.createElement(Label, {\n  as: \"span\",\n  content: name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 40\n  }\n});\n\ncategoryRenderer.propTypes = {\n  name: PropTypes.string\n};\n\nconst resultRenderer = ({\n  title\n}) => /*#__PURE__*/React.createElement(Label, {\n  content: title,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 39\n  }\n});\n\nresultRenderer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string\n};\nexport default SearchApp;","map":{"version":3,"sources":["/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js"],"names":["React","Component","Search","Grid","Header","Segment","Label","_","SelectedResult","PropTypes","SearchApp","state","results","selectedResult","handleSearchChange","event","value","response","fetch","headers","data","json","resultsRaw","suggestionGroups","searchSuggestions","map","result","title","displayText","url","setState","error","console","handleResultSelect","e","render","debounce","leading","categoryLayoutRenderer","resultRenderer","categoryContent","resultsContent","background","propTypes","node","categoryRenderer","name","string","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Search, Grid, Header, Segment, Label } from 'semantic-ui-react'\nimport _ from \"lodash\";\nimport logo from \"../logo.svg\";\nimport SelectedResult from \"./SelectedResult\";\nimport \"../App.css\";\nimport PropTypes from 'prop-types'\n\nclass SearchApp extends Component {\n   state = { results: ['null'], selectedResult: null };\n\n   handleSearchChange = async (event, { value }) => {\n      try {\n         const response = await fetch(\n            `https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`,\n            {\n               headers: {\n                  \"Ocp-Apim-Subscription-Key\": \"d901d64eeb334505825c20a547b760ba\"\n               }\n            }\n         );\n         const data = await response.json();\n         const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n         const results = resultsRaw.map(result => ({ title: result.displayText, url: result.url }));\n         this.setState({ results });\n      } catch (error) {\n         console.error(`Error fetching search ${value}`);\n      }\n   };\n\n   handleResultSelect = (e, { result }) =>\n      this.setState({ selectedResult: result });\n\n   render() {\n      return (\n         <div>\n            <Search\n               onSearchChange={_.debounce(this.handleSearchChange, 1000, {\n                  leading: true\n               })}\n               results={this.state.results}\n               onResultSelect={this.handleResultSelect}\n               categoryLayoutRenderer={categoryLayoutRenderer}\n               resultRenderer={resultRenderer}\n            />\n            <SelectedResult result={this.state.selectedResult} />\n         </div>\n      );\n   }\n}\n\nconst categoryLayoutRenderer = ({ categoryContent, resultsContent }) => (\n   <div>\n      <h3 className='name'>{categoryContent}</h3>\n      <div style={{ background: 'red' }} className='results'>\n         {resultsContent}\n      </div>\n   </div>\n)\n\ncategoryLayoutRenderer.propTypes = {\n   categoryContent: PropTypes.node,\n   resultsContent: PropTypes.node,\n}\n\nconst categoryRenderer = ({ name }) => <Label as='span' content={name} />\n\ncategoryRenderer.propTypes = {\n   name: PropTypes.string,\n}\n\nconst resultRenderer = ({ title }) => <Label content={title} />\n\nresultRenderer.propTypes = {\n   title: PropTypes.string,\n   description: PropTypes.string,\n}\n\n\nexport default SearchApp;"]},"metadata":{},"sourceType":"module"}