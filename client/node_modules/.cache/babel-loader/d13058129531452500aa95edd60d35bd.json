{"ast":null,"code":"var _jsxFileName = \"/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Form, Grid, Header, Segment, Container, List } from 'semantic-ui-react';\nvar currentValueInsideField = '';\n\nclass SearchApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = event => {\n      if (event.key === 'Enter') {\n        console.log(this.state.value);\n        console.log(this.state.results);\n        console.log(this.state.result);\n        console.log(this.state.selectedResult);\n      }\n    };\n\n    this.handleSearchChange = async (event, {\n      value\n    }) => {\n      try {\n        const response = await fetch(`https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`, {\n          headers: {\n            \"Ocp-Apim-Subscription-Key\": \"daa901d64eeb334505825c20a547b760ba\"\n          }\n        });\n        const data = await response.json();\n        const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n        const results = resultsRaw.map(result => ({\n          title: result.displayText,\n          url: result.url\n        }));\n        this.setState({\n          results\n        });\n        console.log(value);\n        currentValueInsideField = value;\n      } catch (error) {\n        console.log(value);\n        console.error(`Error fetching search ${value}`);\n      }\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => {\n      this.setState({\n        selectedResult: result\n      });\n      this.state.selectedResult = result;\n      e.preventDefault();\n      localStorage.setItem('searchQuery', result.title); //console.log(result.title);\n\n      this.props.searchQueryProp(result.title);\n    };\n\n    this.state = {\n      results: ['null'],\n      selectedResult: null,\n      previousQuery: null\n    }; //console.log(localStorage.getItem('isThisSearchPage'));\n    //Retrieving the previous search query state from Storage\n\n    var retrievedPrevQueryObject = localStorage.getItem('searchQuery');\n\n    if (retrievedPrevQueryObject == null) {\n      //console.log('Detected null');\n      this.state.previousQuery = 'Enter keyword...';\n    } else {\n      //console.log('Detected ' + (retrievedSwitch1stateObject === 'true'));\n      this.state.previousQuery = retrievedPrevQueryObject;\n    } //if (this.props.resetSearchProp === true) {\n    //   this.state.name = null;\n    //}\n\n  }\n\n  render() {\n    const {\n      value,\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onKeyPress: this.handleKeyPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Search, Object.assign({\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 1000, {\n        leading: true\n      }),\n      results: this.state.results\n    }, this.props, {\n      style: {\n        overflow: 'visible'\n      },\n      defaultValue: this.state.previousQuery,\n      icon: 'chevron down',\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\nexport default SearchApp;","map":{"version":3,"sources":["/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/SearchApp.js"],"names":["_","React","Component","Search","Form","Grid","Header","Segment","Container","List","currentValueInsideField","SearchApp","constructor","props","handleKeyPress","event","key","console","log","state","value","results","result","selectedResult","handleSearchChange","response","fetch","headers","data","json","resultsRaw","suggestionGroups","searchSuggestions","map","title","displayText","url","setState","error","handleResultSelect","e","preventDefault","localStorage","setItem","searchQueryProp","previousQuery","retrievedPrevQueryObject","getItem","render","debounce","leading","overflow","styleLink","document","createElement","rel","href","head","appendChild"],"mappings":";AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,EAA8CC,SAA9C,EAAyDC,IAAzD,QAAqE,mBAArE;AAEA,IAAIC,uBAAuB,GAAG,EAA9B;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAC/BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAwBnBC,cAxBmB,GAwBDC,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,OAAvB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWG,MAAvB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWI,cAAvB;AACF;AACH,KA/BkB;;AAAA,SAkCnBC,kBAlCmB,GAkCE,OAAOT,KAAP,EAAc;AAAEK,MAAAA;AAAF,KAAd,KAA4B;AAC9C,UAAI;AACD,cAAMK,QAAQ,GAAG,MAAMC,KAAK,CACxB,yEAAwEN,KAAM,EADtD,EAEzB;AACGO,UAAAA,OAAO,EAAE;AACN,yCAA6B;AADvB;AADZ,SAFyB,CAA5B;AAQA,cAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,cAAMC,UAAU,GAAGF,IAAI,CAACG,gBAAL,CAAsB,CAAtB,EAAyBC,iBAA5C;AACA,cAAMX,OAAO,GAAGS,UAAU,CAACG,GAAX,CAAeX,MAAM,KAAK;AAAEY,UAAAA,KAAK,EAAEZ,MAAM,CAACa,WAAhB;AAA6BC,UAAAA,GAAG,EAAEd,MAAM,CAACc;AAAzC,SAAL,CAArB,CAAhB;AACA,aAAKC,QAAL,CAAc;AAAEhB,UAAAA;AAAF,SAAd;AAEAJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAV,QAAAA,uBAAuB,GAAGU,KAA1B;AAEF,OAjBD,CAiBE,OAAOkB,KAAP,EAAc;AACbrB,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAH,QAAAA,OAAO,CAACqB,KAAR,CAAe,yBAAwBlB,KAAM,EAA7C;AACF;AACH,KAxDkB;;AAAA,SA0DnBmB,kBA1DmB,GA0DE,CAACC,CAAD,EAAI;AAAElB,MAAAA;AAAF,KAAJ,KAAmB;AACrC,WAAKe,QAAL,CAAc;AAAEd,QAAAA,cAAc,EAAED;AAAlB,OAAd;AACA,WAAKH,KAAL,CAAWI,cAAX,GAA4BD,MAA5B;AACAkB,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCrB,MAAM,CAACY,KAA3C,EAJqC,CAKrC;;AACA,WAAKrB,KAAL,CAAW+B,eAAX,CAA2BtB,MAAM,CAACY,KAAlC;AACF,KAjEkB;;AAEhB,SAAKf,KAAL,GAAa;AAAEE,MAAAA,OAAO,EAAE,CAAC,MAAD,CAAX;AAAqBE,MAAAA,cAAc,EAAE,IAArC;AAA2CsB,MAAAA,aAAa,EAAE;AAA1D,KAAb,CAFgB,CAIhB;AAGA;;AACA,QAAIC,wBAAwB,GAAGJ,YAAY,CAACK,OAAb,CAAqB,aAArB,CAA/B;;AACA,QAAID,wBAAwB,IAAI,IAAhC,EAAsC;AACnC;AACA,WAAK3B,KAAL,CAAW0B,aAAX,GAA2B,kBAA3B;AACF,KAHD,MAGO;AACJ;AACA,WAAK1B,KAAL,CAAW0B,aAAX,GAA2BC,wBAA3B;AAEF,KAhBe,CAmBhB;AACA;AACA;;AACF;;AA6CDE,EAAAA,MAAM,GAAG;AACN,UAAM;AAAE5B,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKF,KAAhC;AAEA,wBACG,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKL,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,MAAD;AACG,MAAA,cAAc,EAAE,KAAKyB,kBADxB;AAEG,MAAA,cAAc,EAAEvC,CAAC,CAACiD,QAAF,CAAW,KAAKzB,kBAAhB,EAAoC,IAApC,EAA0C;AACvD0B,QAAAA,OAAO,EAAE;AAD8C,OAA1C,CAFnB;AAKG,MAAA,OAAO,EAAE,KAAK/B,KAAL,CAAWE;AALvB,OAMO,KAAKR,KANZ;AAOG,MAAA,KAAK,EAAE;AAAEsC,QAAAA,QAAQ,EAAE;AAAZ,OAPV;AAQG,MAAA,YAAY,EAAE,KAAKhC,KAAL,CAAW0B,aAR5B;AASG,MAAA,IAAI,EAAE,cATT;AAUG,MAAA,KAAK,EAAEzB,KAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADH,CADH;AAgBF;;AAvF8B;;AA0FlC,MAAMgC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACAF,SAAS,CAACG,GAAV,GAAgB,YAAhB;AACAH,SAAS,CAACI,IAAV,GAAiB,gEAAjB;AACAH,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,SAA1B;AAEA,eAAezC,SAAf","sourcesContent":["import _ from 'lodash'\nimport React, { Component } from 'react'\nimport { Search, Form, Grid, Header, Segment, Container, List } from 'semantic-ui-react'\n\nvar currentValueInsideField = '';\n\nclass SearchApp extends Component {\n   constructor(props) {\n      super(props);\n      this.state = { results: ['null'], selectedResult: null, previousQuery: null };\n\n      //console.log(localStorage.getItem('isThisSearchPage'));\n\n\n      //Retrieving the previous search query state from Storage\n      var retrievedPrevQueryObject = localStorage.getItem('searchQuery');\n      if (retrievedPrevQueryObject == null) {\n         //console.log('Detected null');\n         this.state.previousQuery = 'Enter keyword...';\n      } else {\n         //console.log('Detected ' + (retrievedSwitch1stateObject === 'true'));\n         this.state.previousQuery = retrievedPrevQueryObject;\n\n      }\n\n\n      //if (this.props.resetSearchProp === true) {\n      //   this.state.name = null;\n      //}\n   }\n\n   handleKeyPress = (event) => {\n      if (event.key === 'Enter') {\n         console.log(this.state.value);\n         console.log(this.state.results);\n         console.log(this.state.result);\n         console.log(this.state.selectedResult);\n      }\n   }\n\n\n   handleSearchChange = async (event, { value }) => {\n      try {\n         const response = await fetch(\n            `https://api.cognitive.microsoft.com/bing/v7.0/suggestions?mkt=fr-FR&q=${value}`,\n            {\n               headers: {\n                  \"Ocp-Apim-Subscription-Key\": \"daa901d64eeb334505825c20a547b760ba\"\n               }\n            }\n         );\n         const data = await response.json();\n         const resultsRaw = data.suggestionGroups[0].searchSuggestions;\n         const results = resultsRaw.map(result => ({ title: result.displayText, url: result.url }));\n         this.setState({ results });\n\n         console.log(value);\n         currentValueInsideField = value;\n\n      } catch (error) {\n         console.log(value);\n         console.error(`Error fetching search ${value}`);\n      }\n   };\n\n   handleResultSelect = (e, { result }) => {\n      this.setState({ selectedResult: result });\n      this.state.selectedResult = result;\n      e.preventDefault();\n      localStorage.setItem('searchQuery', result.title);\n      //console.log(result.title);\n      this.props.searchQueryProp(result.title);\n   }\n\n   render() {\n      const { value, results } = this.state\n\n      return (\n         <Form onKeyPress={this.handleKeyPress}>\n            <Search\n               onResultSelect={this.handleResultSelect}\n               onSearchChange={_.debounce(this.handleSearchChange, 1000, {\n                  leading: true,\n               })}\n               results={this.state.results}\n               {...this.props}\n               style={{ overflow: 'visible' }}\n               defaultValue={this.state.previousQuery}\n               icon={'chevron down'}\n               value={value}\n            />\n         </Form>\n      )\n   }\n}\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nexport default SearchApp;"]},"metadata":{},"sourceType":"module"}