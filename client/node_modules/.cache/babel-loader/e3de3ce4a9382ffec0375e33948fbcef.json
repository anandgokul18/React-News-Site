{"ast":null,"code":"var _jsxFileName = \"/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/CommentBox.js\";\nimport React from 'react';\nimport commentBox from 'commentbox.io';\nimport qs from 'qs';\n\nclass CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      currentCardId: ''\n    };\n  }\n\n  componentDidMount() {\n    this.removeCommentBox = commentBox('5695436727779328-proj');\n  }\n\n  componentWillUnmount() {\n    this.removeCommentBox();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }\n    });\n  }\n\n}\n\nconst commentbox = commentBox('my-project-id', {\n  className: 'commentbox',\n  // the class of divs to look for\n  defaultBoxId: 'commentbox',\n  // the default ID to associate to the div\n  tlcParam: 'tlc',\n  // used for identifying links to comments on your page\n  backgroundColor: null,\n  // default transparent\n  textColor: null,\n  // default black\n  subtextColor: null,\n  // default grey\n  singleSignOn: null,\n\n  // enables Single Sign-On (for Professional plans only)\n\n  /**\n   * Creates a unique URL to each box on your page.\n   * \n   * @param {string} boxId\n   * @param {Location} pageLocation - a copy of the current window.location\n   * @returns {string}\n   */\n  createBoxUrl(boxId, pageLocation) {\n    pageLocation.search = ''; // removes query string!\n\n    pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n\n    return pageLocation.href; // return url string\n  },\n\n  /**\n   * Fires once the plugin loads its comments.\n   * May fire multiple times in its lifetime.\n   * \n   * @param {number} count\n   */\n  onCommentCount(count) {}\n\n});\nexport default CommentBox;","map":{"version":3,"sources":["/Users/anandgokul/Documents/FreeVar_Local/homework8-anandgok/frontend/client/src/component/CommentBox.js"],"names":["React","commentBox","qs","CommentBox","Component","constructor","props","currentCardId","componentDidMount","removeCommentBox","componentWillUnmount","render","commentbox","className","defaultBoxId","tlcParam","backgroundColor","textColor","subtextColor","singleSignOn","createBoxUrl","boxId","pageLocation","search","hash","href","onCommentCount","count"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;AACA,SAAKA,KAAL,GAAa;AACVC,MAAAA,aAAa,EAAE;AADL,KAAb;AAGF;;AAEDC,EAAAA,iBAAiB,GAAG;AAGjB,SAAKC,gBAAL,GAAwBR,UAAU,CAAC,uBAAD,CAAlC;AAEF;;AAEDS,EAAAA,oBAAoB,GAAG;AAEpB,SAAKD,gBAAL;AACF;;AAEDE,EAAAA,MAAM,GAAG;AAEN,wBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH;AAGF;;AAzBqC;;AA4BzC,MAAMC,UAAU,GAAGX,UAAU,CAAC,eAAD,EAAkB;AAC5CY,EAAAA,SAAS,EAAE,YADiC;AACnB;AACzBC,EAAAA,YAAY,EAAE,YAF8B;AAEhB;AAC5BC,EAAAA,QAAQ,EAAE,KAHkC;AAG3B;AACjBC,EAAAA,eAAe,EAAE,IAJ2B;AAIrB;AACvBC,EAAAA,SAAS,EAAE,IALiC;AAK3B;AACjBC,EAAAA,YAAY,EAAE,IAN8B;AAMxB;AACpBC,EAAAA,YAAY,EAAE,IAP8B;;AAOxB;;AACpB;;;;;;;AAOAC,EAAAA,YAAY,CAACC,KAAD,EAAQC,YAAR,EAAsB;AAE/BA,IAAAA,YAAY,CAACC,MAAb,GAAsB,EAAtB,CAF+B,CAEL;;AAC1BD,IAAAA,YAAY,CAACE,IAAb,GAAoBH,KAApB,CAH+B,CAGJ;;AAC3B,WAAOC,YAAY,CAACG,IAApB,CAJ+B,CAIL;AAC5B,GApB2C;;AAqB5C;;;;;;AAMAC,EAAAA,cAAc,CAACC,KAAD,EAAQ,CAErB;;AA7B2C,CAAlB,CAA7B;AAgCA,eAAexB,UAAf","sourcesContent":["import React from 'react';\nimport commentBox from 'commentbox.io';\n\nimport qs from 'qs';\n\nclass CommentBox extends React.Component {\n   constructor(props) {\n      super(props);\n      this.props = {\n         currentCardId: '',\n      }\n   }\n\n   componentDidMount() {\n\n\n      this.removeCommentBox = commentBox('5695436727779328-proj');\n\n   }\n\n   componentWillUnmount() {\n\n      this.removeCommentBox();\n   }\n\n   render() {\n\n      return (\n         <div className=\"commentbox\" />\n      );\n   }\n}\n\nconst commentbox = commentBox('my-project-id', {\n   className: 'commentbox', // the class of divs to look for\n   defaultBoxId: 'commentbox', // the default ID to associate to the div\n   tlcParam: 'tlc', // used for identifying links to comments on your page\n   backgroundColor: null, // default transparent\n   textColor: null, // default black\n   subtextColor: null, // default grey\n   singleSignOn: null, // enables Single Sign-On (for Professional plans only)\n   /**\n    * Creates a unique URL to each box on your page.\n    * \n    * @param {string} boxId\n    * @param {Location} pageLocation - a copy of the current window.location\n    * @returns {string}\n    */\n   createBoxUrl(boxId, pageLocation) {\n\n      pageLocation.search = ''; // removes query string!\n      pageLocation.hash = boxId; // creates link to this specific Comment Box on your page\n      return pageLocation.href; // return url string\n   },\n   /**\n    * Fires once the plugin loads its comments.\n    * May fire multiple times in its lifetime.\n    * \n    * @param {number} count\n    */\n   onCommentCount(count) {\n\n   }\n});\n\nexport default CommentBox;"]},"metadata":{},"sourceType":"module"}